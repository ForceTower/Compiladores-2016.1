1 const palavra_reservada
2 inicio palavra_reservada
3 inteiro palavra_reservada
3 a id
3 = operador
3 2 nro
3 , delimitador
3 a id
3 = operador
3 4 nro
3 , delimitador
3 b id
3 = operador
3 5 nro
3 ; delimitador
4 inteiro palavra_reservada
4 kappa id
4 = operador
4 2 nro
4 ; delimitador
5 fim palavra_reservada
7 var palavra_reservada
8 inicio palavra_reservada
9 inteiro palavra_reservada
9 < operador
9 < operador
9 12 nro
9 > operador
9 > operador
9 a id
9 , delimitador
9 < operador
9 < operador
9 56 nro
9 , delimitador
9 67 nro
9 , delimitador
9 87 nro
9 > operador
9 > operador
9 b id
9 , delimitador
9 c id
9 ; delimitador
10 fim palavra_reservada
12 funcao palavra_reservada
12 inteiro palavra_reservada
12 zuera id
12 ( delimitador
12 inteiro palavra_reservada
12 a id
12 , delimitador
12 inteiro palavra_reservada
12 b id
12 , delimitador
12 caractere palavra_reservada
12 c id
12 ) delimitador
13 inicio palavra_reservada
14 var palavra_reservada
14 inicio palavra_reservada
15 inteiro palavra_reservada
15 a id
15 , delimitador
15 b id
15 , delimitador
15 c id
15 ; delimitador
16 real palavra_reservada
16 < operador
16 < operador
16 3 nro
16 , delimitador
16 4 nro
16 , delimitador
16 3 nro
16 , delimitador
16 3 nro
16 > operador
16 > operador
16 isolado id
16 ; delimitador
17 fim palavra_reservada
18 b id
18 = operador
18 b id
18 * operador
18 b id
18 - operador
18 c id
18 + operador
18 a id
18 ; delimitador
19 leia palavra_reservada
19 ( delimitador
19 b id
19 ) delimitador
19 ; delimitador
20 leia palavra_reservada
20 ( delimitador
20 c id
20 ) delimitador
20 ; delimitador
21 a id
21 = operador
21 ( delimitador
21 b id
21 + operador
21 c id
21 ) delimitador
21 ; delimitador
22 inicio palavra_reservada
23 i id
23 = operador
23 i id
23 - operador
23 4 nro
23 ; delimitador
24 fim palavra_reservada
25 = operador
25 > operador
25 algo id
25 ( delimitador
25 1 nro
25 , delimitador
25 2 nro
25 , delimitador
25 3 nro
25 , delimitador
25 4 nro
25 ) delimitador
25 = operador
25 > operador
25 ; delimitador
26 fim palavra_reservada
28 funcao palavra_reservada
28 zuera2 id
28 ( delimitador
28 inteiro palavra_reservada
28 a id
28 , delimitador
28 inteiro palavra_reservada
28 b id
28 , delimitador
28 caractere palavra_reservada
28 c id
28 ) delimitador
29 inicio palavra_reservada
30 b id
30 = operador
30 b id
30 + operador
30 3 nro
30 ; delimitador
31 fim palavra_reservada
33 programa palavra_reservada
34 inicio palavra_reservada
35 z id
35 = operador
35 zuera2 id
35 ( delimitador
35 ) delimitador
35 ; delimitador
36 b id
36 = operador
36 a id
36 > operador
36 kappa id
36 ( delimitador
36 1 nro
36 , delimitador
36 2 nro
36 , delimitador
36 3 nro
36 ) delimitador
36 e operador
36 c id
36 <> operador
36 t id
36 ; delimitador
37 enquanto palavra_reservada
37 ( delimitador
37 2 nro
37 > operador
37 3 nro
37 ) delimitador
37 faca palavra_reservada
38 inicio palavra_reservada
39 kappa id
39 = operador
39 2 nro
39 ; delimitador
40 se palavra_reservada
40 ( delimitador
40 kappa id
40 <> operador
40 3 nro
40 ) delimitador
40 entao palavra_reservada
41 inicio palavra_reservada
42 escreva palavra_reservada
42 ( delimitador
42 "nao ligo" cadeia_de_caracteres
42 ) delimitador
42 ; delimitador
43 leia palavra_reservada
43 ( delimitador
43 ue id
43 ) delimitador
43 ; delimitador
44 fim palavra_reservada
46 se palavra_reservada
46 ( delimitador
46 j id
46 < operador
46 5 nro
46 ou operador
46 j id
46 > operador
46 10 nro
46 ) delimitador
46 entao palavra_reservada
47 inicio palavra_reservada
48 escreva palavra_reservada
48 ( delimitador
48 "Valor muito alto " cadeia_de_caracteres
48 , delimitador
48 j id
48 , delimitador
48 "Menos please" cadeia_de_caracteres
48 ) delimitador
48 ; delimitador
49 fim palavra_reservada
51 senao palavra_reservada
52 inicio palavra_reservada
53 se palavra_reservada
53 ( delimitador
53 k id
53 <> operador
53 3 nro
53 ) delimitador
53 entao palavra_reservada
54 inicio palavra_reservada
55 k id
55 = operador
55 45 nro
55 ; delimitador
56 fim palavra_reservada
58 senao palavra_reservada
59 inicio palavra_reservada
60 var palavra_reservada
61 inicio palavra_reservada
62 inteiro palavra_reservada
62 < operador
62 < operador
62 4 nro
62 , delimitador
62 4 nro
62 > operador
62 > operador
62 kappa id
62 , delimitador
62 i id
62 , delimitador
62 j id
62 ; delimitador
63 fim palavra_reservada
64 j id
64 = operador
64 0 nro
64 ; delimitador
65 i id
65 = operador
65 j id
65 ; delimitador
66 enquanto palavra_reservada
66 ( delimitador
66 i id
66 < operador
66 4 nro
66 ) delimitador
66 faca palavra_reservada
67 inicio palavra_reservada
68 enquanto palavra_reservada
68 ( delimitador
68 j id
68 < operador
68 4 nro
68 ) delimitador
68 faca palavra_reservada
69 inicio palavra_reservada
70 < operador
70 < operador
70 i id
70 , delimitador
70 j id
70 > operador
70 > operador
70 kappa id
70 = operador
70 0 nro
70 ; delimitador
71 j id
71 = operador
71 j id
71 + operador
71 1 nro
71 ; delimitador
72 fim palavra_reservada
73 i id
73 = operador
73 i id
73 + operador
73 1 nro
73 ; delimitador
74 fim palavra_reservada
76 escreva palavra_reservada
76 ( delimitador
76 "HEHEHEHE" cadeia_de_caracteres
76 ) delimitador
76 ; delimitador
77 escreva palavra_reservada
77 ( delimitador
77 "N Enquantos maior que todos" cadeia_de_caracteres
77 ) delimitador
77 ; delimitador
78 fim palavra_reservada
79 fim palavra_reservada
80 fim palavra_reservada
81 escreva palavra_reservada
81 ( delimitador
81 teste id
81 , delimitador
81 "teste" cadeia_de_caracteres
81 , delimitador
81 hehehe id
81 ) delimitador
81 ; delimitador
82 leia palavra_reservada
82 ( delimitador
82 itsreal id
82 ) delimitador
82 ; delimitador
83 fim palavra_reservada
Sucesso!
