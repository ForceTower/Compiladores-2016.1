1 const palavra_reservada
2 inicio palavra_reservada
3 inteiro palavra_reservada
3 a id
3 = operador
3 k id
3 , delimitador
3 b id
3 = operador
3 2 nro
3 * operador
3 3 nro
3 + operador
3 7 nro
3 * operador
3 5 nro
4 caractere palavra_reservada
4 c id
4 = operador
4 'k' caractere
4 , delimitador
4 b id
4 = operador
4 hehe id
4 ; delimitador
5 inteiro palavra_reservada
5 d id
5 = operador
5 kappa id
5 ( delimitador
5 ) delimitador
5 ; delimitador
6 fim palavra_reservada
8 var palavra_reservada
9 inicio palavra_reservada
10 inteiro palavra_reservada
10 < operador
10 < operador
10 12 nro
10 > operador
10 > operador
10 a id
10 , delimitador
10 < operador
10 < operador
10 56 nro
10 , delimitador
10 67 nro
10 , delimitador
10 87 nro
10 > operador
10 > operador
10 b id
10 , delimitador
10 c id
10 ; delimitador
11 fim palavra_reservada
13 funcao palavra_reservada
13 inteiro palavra_reservada
13 zuera id
13 ( delimitador
13 inteiro palavra_reservada
13 a id
13 , delimitador
13 inteiro palavra_reservada
13 b id
13 , delimitador
13 caractere palavra_reservada
13 c id
13 ) delimitador
14 inicio palavra_reservada
15 var palavra_reservada
15 inicio palavra_reservada
16 inteiro palavra_reservada
16 a id
16 , delimitador
16 b id
16 , delimitador
16 c id
16 ; delimitador
17 real palavra_reservada
17 < operador
17 < operador
17 3 nro
17 , delimitador
17 4 nro
17 , delimitador
17 3 nro
17 , delimitador
17 3 nro
17 > operador
17 > operador
17 isolado id
17 ; delimitador
18 inteiro palavra_reservada
18 a id
18 , delimitador
18 b id
18 ; delimitador
19 caractere palavra_reservada
19 k id
19 ; delimitador
20 fim palavra_reservada
21 b id
21 = operador
21 b id
21 * operador
21 b id
21 - operador
21 c id
21 + operador
21 a id
21 ; delimitador
22 leia palavra_reservada
22 ( delimitador
22 b id
22 ) delimitador
22 ; delimitador
23 leia palavra_reservada
23 ( delimitador
23 c id
23 ) delimitador
23 ; delimitador
24 a id
24 = operador
24 ( delimitador
24 b id
24 + operador
24 c id
24 ) delimitador
24 ; delimitador
25 inicio palavra_reservada
26 i id
26 = operador
26 i id
26 - operador
26 4 nro
26 ; delimitador
27 fim palavra_reservada
28 = operador
28 > operador
28 algo id
28 ( delimitador
28 1 nro
28 , delimitador
28 2 nro
28 , delimitador
28 3 nro
28 , delimitador
28 4 nro
28 ) delimitador
28 = operador
28 > operador
28 ; delimitador
29 fim palavra_reservada
31 funcao palavra_reservada
31 zuera2 id
31 ( delimitador
31 inteiro palavra_reservada
31 a id
31 , delimitador
31 inteiro palavra_reservada
31 b id
31 , delimitador
31 caractere palavra_reservada
31 c id
31 ) delimitador
32 inicio palavra_reservada
33 b id
33 = operador
33 b id
33 + operador
33 3 nro
33 ; delimitador
34 fim palavra_reservada
36 programa palavra_reservada
37 inicio palavra_reservada
38 z id
38 = operador
38 zuera2 id
38 ( delimitador
38 ) delimitador
38 ; delimitador
39 b id
39 = operador
39 a id
39 > operador
39 kappa id
39 ( delimitador
39 1 nro
39 , delimitador
39 2 nro
39 , delimitador
39 3 nro
39 ) delimitador
39 e operador
39 c id
39 <> operador
39 t id
39 ; delimitador
40 enquanto palavra_reservada
40 ( delimitador
40 2 nro
40 > operador
40 3 nro
40 ) delimitador
40 faca palavra_reservada
41 inicio palavra_reservada
42 kappa id
42 = operador
42 2 nro
42 ; delimitador
43 se palavra_reservada
43 ( delimitador
43 kappa id
43 <> operador
43 3 nro
43 ) delimitador
43 entao palavra_reservada
44 inicio palavra_reservada
45 escreva palavra_reservada
45 ( delimitador
45 "nao ligo" cadeia_de_caracteres
45 ) delimitador
45 ; delimitador
46 leia palavra_reservada
46 ( delimitador
46 ue id
46 ) delimitador
46 ; delimitador
47 fim palavra_reservada
49 se palavra_reservada
49 ( delimitador
49 j id
49 < operador
49 5 nro
49 ou operador
49 j id
49 > operador
49 10 nro
49 ) delimitador
49 entao palavra_reservada
50 inicio palavra_reservada
51 escreva palavra_reservada
51 ( delimitador
51 "Valor muito alto " cadeia_de_caracteres
51 , delimitador
51 j id
51 , delimitador
51 "Menos please" cadeia_de_caracteres
51 ) delimitador
51 ; delimitador
52 fim palavra_reservada
54 senao palavra_reservada
55 inicio palavra_reservada
56 se palavra_reservada
56 ( delimitador
56 k id
56 <> operador
56 3 nro
56 ) delimitador
56 entao palavra_reservada
57 inicio palavra_reservada
58 k id
58 = operador
58 45 nro
58 ; delimitador
59 fim palavra_reservada
61 senao palavra_reservada
62 inicio palavra_reservada
63 var palavra_reservada
64 inicio palavra_reservada
65 inteiro palavra_reservada
65 < operador
65 < operador
65 4 nro
65 , delimitador
65 4 nro
65 > operador
65 > operador
65 kappa id
65 , delimitador
65 i id
65 , delimitador
65 j id
65 ; delimitador
66 fim palavra_reservada
67 j id
67 = operador
67 0 nro
67 ; delimitador
68 i id
68 = operador
68 j id
68 ; delimitador
69 enquanto palavra_reservada
69 ( delimitador
69 i id
69 < operador
69 4 nro
69 ) delimitador
69 faca palavra_reservada
70 inicio palavra_reservada
71 enquanto palavra_reservada
71 ( delimitador
71 j id
71 < operador
71 4 nro
71 ) delimitador
71 faca palavra_reservada
72 inicio palavra_reservada
73 < operador
73 < operador
73 i id
73 , delimitador
73 j id
73 > operador
73 > operador
73 kappa id
73 = operador
73 0 nro
73 ; delimitador
74 j id
74 = operador
74 j id
74 + operador
74 1 nro
74 ; delimitador
75 fim palavra_reservada
76 i id
76 = operador
76 i id
76 + operador
76 1 nro
76 ; delimitador
77 fim palavra_reservada
79 escreva palavra_reservada
79 ( delimitador
79 "HEHEHEHE" cadeia_de_caracteres
79 ) delimitador
79 ; delimitador
80 escreva palavra_reservada
80 ( delimitador
80 "N Enquantos maior que todos" cadeia_de_caracteres
80 ) delimitador
80 ; delimitador
81 fim palavra_reservada
82 fim palavra_reservada
83 fim palavra_reservada
84 escreva palavra_reservada
84 ( delimitador
84 teste id
84 , delimitador
84 "teste" cadeia_de_caracteres
84 , delimitador
84 hehehe id
84 ) delimitador
84 ; delimitador
85 leia palavra_reservada
85 ( delimitador
85 itsreal id
85 ) delimitador
85 ; delimitador
86 fim palavra_reservada
Sucesso!
